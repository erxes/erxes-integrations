{"id":"../../node_modules/mongoose/lib/cast/string.js","dependencies":[{"name":"/Users/orgil/Documents/repos/erxes-integrations/package.json","includedInParent":true,"mtime":1561440176171},{"name":"/Users/orgil/Documents/repos/erxes-integrations/node_modules/mongoose/package.json","includedInParent":true,"mtime":1560229638891},{"name":"../error/cast","loc":{"line":3,"column":26},"parent":"/Users/orgil/Documents/repos/erxes-integrations/node_modules/mongoose/lib/cast/string.js","resolved":"/Users/orgil/Documents/repos/erxes-integrations/node_modules/mongoose/lib/error/cast.js"}],"generated":{"js":"'use strict';\n\nconst CastError = require('../error/cast');\n/*!\n * Given a value, cast it to a string, or throw a `CastError` if the value\n * cannot be casted. `null` and `undefined` are considered valid.\n *\n * @param {Any} value\n * @param {String} [path] optional the path to set on the CastError\n * @return {string|null|undefined}\n * @throws {CastError}\n * @api private\n */\n\n\nmodule.exports = function castString(value, path) {\n  // If null or undefined\n  if (value == null) {\n    return value;\n  } // handle documents being passed\n\n\n  if (value._id && typeof value._id === 'string') {\n    return value._id;\n  } // Re: gh-647 and gh-3030, we're ok with casting using `toString()`\n  // **unless** its the default Object.toString, because \"[object Object]\"\n  // doesn't really qualify as useful data\n\n\n  if (value.toString && value.toString !== Object.prototype.toString && !Array.isArray(value)) {\n    return value.toString();\n  }\n\n  throw new CastError('string', value, path);\n};"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":1,"column":0}},{"generated":{"line":3,"column":0},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":3,"column":0}},{"name":"CastError","generated":{"line":3,"column":6},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":3,"column":6}},{"generated":{"line":3,"column":15},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":3,"column":15}},{"name":"require","generated":{"line":3,"column":18},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":3,"column":18}},{"generated":{"line":3,"column":25},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":3,"column":25}},{"generated":{"line":3,"column":26},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":3,"column":26}},{"generated":{"line":3,"column":41},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":3,"column":25}},{"generated":{"line":3,"column":42},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":3,"column":0}},{"generated":{"line":4,"column":0},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":5,"column":0}},{"name":"module","generated":{"line":16,"column":0},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":16,"column":0}},{"generated":{"line":16,"column":6},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":16,"column":6}},{"name":"exports","generated":{"line":16,"column":7},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":16,"column":7}},{"generated":{"line":16,"column":14},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":16,"column":0}},{"generated":{"line":16,"column":17},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":16,"column":17}},{"name":"castString","generated":{"line":16,"column":26},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":16,"column":26}},{"generated":{"line":16,"column":36},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":16,"column":17}},{"name":"value","generated":{"line":16,"column":37},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":16,"column":37}},{"generated":{"line":16,"column":42},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":16,"column":17}},{"name":"path","generated":{"line":16,"column":44},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":16,"column":44}},{"generated":{"line":16,"column":48},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":16,"column":17}},{"generated":{"line":16,"column":50},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":16,"column":50}},{"generated":{"line":17,"column":0},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":17,"column":2}},{"generated":{"line":18,"column":0},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":18,"column":2}},{"name":"value","generated":{"line":18,"column":6},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":18,"column":6}},{"generated":{"line":18,"column":11},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":18,"column":11}},{"generated":{"line":18,"column":15},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":18,"column":15}},{"generated":{"line":18,"column":19},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":18,"column":2}},{"generated":{"line":18,"column":21},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":18,"column":21}},{"generated":{"line":19,"column":0},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":19,"column":4}},{"name":"value","generated":{"line":19,"column":11},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":19,"column":11}},{"generated":{"line":19,"column":16},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":19,"column":4}},{"generated":{"line":20,"column":0},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":20,"column":3}},{"generated":{"line":20,"column":3},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":16,"column":50}},{"generated":{"line":20,"column":4},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":22,"column":2}},{"generated":{"line":23,"column":0},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":23,"column":2}},{"name":"value","generated":{"line":23,"column":6},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":23,"column":6}},{"generated":{"line":23,"column":11},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":23,"column":11}},{"name":"_id","generated":{"line":23,"column":12},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":23,"column":12}},{"generated":{"line":23,"column":15},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":23,"column":6}},{"generated":{"line":23,"column":19},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":23,"column":19}},{"name":"value","generated":{"line":23,"column":26},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":23,"column":26}},{"generated":{"line":23,"column":31},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":23,"column":31}},{"name":"_id","generated":{"line":23,"column":32},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":23,"column":32}},{"generated":{"line":23,"column":35},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":23,"column":19}},{"generated":{"line":23,"column":40},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":23,"column":40}},{"generated":{"line":23,"column":48},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":23,"column":2}},{"generated":{"line":23,"column":50},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":23,"column":50}},{"generated":{"line":24,"column":0},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":24,"column":4}},{"name":"value","generated":{"line":24,"column":11},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":24,"column":11}},{"generated":{"line":24,"column":16},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":24,"column":16}},{"name":"_id","generated":{"line":24,"column":17},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":24,"column":17}},{"generated":{"line":24,"column":20},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":24,"column":4}},{"generated":{"line":25,"column":0},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":25,"column":3}},{"generated":{"line":25,"column":3},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":16,"column":50}},{"generated":{"line":25,"column":4},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":27,"column":2}},{"generated":{"line":26,"column":0},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":28,"column":2}},{"generated":{"line":27,"column":0},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":29,"column":2}},{"generated":{"line":30,"column":0},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":30,"column":2}},{"name":"value","generated":{"line":30,"column":6},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":30,"column":6}},{"generated":{"line":30,"column":11},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":30,"column":11}},{"name":"toString","generated":{"line":30,"column":12},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":30,"column":12}},{"generated":{"line":30,"column":20},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":30,"column":6}},{"name":"value","generated":{"line":30,"column":24},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":31,"column":6}},{"generated":{"line":30,"column":29},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":31,"column":11}},{"name":"toString","generated":{"line":30,"column":30},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":31,"column":12}},{"generated":{"line":30,"column":38},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":31,"column":6}},{"name":"Object","generated":{"line":30,"column":43},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":31,"column":25}},{"generated":{"line":30,"column":49},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":31,"column":31}},{"name":"prototype","generated":{"line":30,"column":50},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":31,"column":32}},{"generated":{"line":30,"column":59},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":31,"column":25}},{"name":"toString","generated":{"line":30,"column":60},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":31,"column":42}},{"generated":{"line":30,"column":68},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":30,"column":6}},{"generated":{"line":30,"column":72},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":32,"column":6}},{"name":"Array","generated":{"line":30,"column":73},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":32,"column":7}},{"generated":{"line":30,"column":78},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":32,"column":12}},{"name":"isArray","generated":{"line":30,"column":79},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":32,"column":13}},{"generated":{"line":30,"column":86},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":32,"column":7}},{"name":"value","generated":{"line":30,"column":87},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":32,"column":21}},{"generated":{"line":30,"column":92},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":32,"column":7}},{"generated":{"line":30,"column":93},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":30,"column":2}},{"generated":{"line":30,"column":95},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":32,"column":29}},{"generated":{"line":31,"column":0},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":33,"column":4}},{"name":"value","generated":{"line":31,"column":11},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":33,"column":11}},{"generated":{"line":31,"column":16},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":33,"column":16}},{"name":"toString","generated":{"line":31,"column":17},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":33,"column":17}},{"generated":{"line":31,"column":25},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":33,"column":11}},{"generated":{"line":31,"column":27},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":33,"column":4}},{"generated":{"line":32,"column":0},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":34,"column":3}},{"generated":{"line":34,"column":0},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":36,"column":2}},{"generated":{"line":34,"column":8},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":36,"column":8}},{"name":"CastError","generated":{"line":34,"column":12},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":36,"column":12}},{"generated":{"line":34,"column":21},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":36,"column":8}},{"generated":{"line":34,"column":22},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":36,"column":22}},{"generated":{"line":34,"column":30},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":36,"column":8}},{"name":"value","generated":{"line":34,"column":32},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":36,"column":32}},{"generated":{"line":34,"column":37},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":36,"column":8}},{"name":"path","generated":{"line":34,"column":39},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":36,"column":39}},{"generated":{"line":34,"column":43},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":36,"column":8}},{"generated":{"line":34,"column":44},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":36,"column":2}},{"generated":{"line":35,"column":0},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":37,"column":1}},{"generated":{"line":35,"column":1},"source":"../../node_modules/mongoose/lib/cast/string.js","original":{"line":16,"column":0}}],"sources":{"../../node_modules/mongoose/lib/cast/string.js":"'use strict';\n\nconst CastError = require('../error/cast');\n\n/*!\n * Given a value, cast it to a string, or throw a `CastError` if the value\n * cannot be casted. `null` and `undefined` are considered valid.\n *\n * @param {Any} value\n * @param {String} [path] optional the path to set on the CastError\n * @return {string|null|undefined}\n * @throws {CastError}\n * @api private\n */\n\nmodule.exports = function castString(value, path) {\n  // If null or undefined\n  if (value == null) {\n    return value;\n  }\n\n  // handle documents being passed\n  if (value._id && typeof value._id === 'string') {\n    return value._id;\n  }\n\n  // Re: gh-647 and gh-3030, we're ok with casting using `toString()`\n  // **unless** its the default Object.toString, because \"[object Object]\"\n  // doesn't really qualify as useful data\n  if (value.toString &&\n      value.toString !== Object.prototype.toString &&\n      !Array.isArray(value)) {\n    return value.toString();\n  }\n\n  throw new CastError('string', value, path);\n};\n"},"lineCount":null}},"error":null,"hash":"ec8e36fe5d4051c7f8ed44f8d869a4c1","cacheData":{"env":{}}}