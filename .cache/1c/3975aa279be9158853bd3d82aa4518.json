{"id":"../../node_modules/regexp-clone/index.js","dependencies":[{"name":"/Users/orgil/Documents/repos/erxes-integrations/package.json","includedInParent":true,"mtime":1561440176171},{"name":"/Users/orgil/Documents/repos/erxes-integrations/node_modules/regexp-clone/package.json","includedInParent":true,"mtime":1559967270838}],"generated":{"js":"\nvar toString = Object.prototype.toString;\n\nfunction isRegExp (o) {\n  return 'object' == typeof o\n      && '[object RegExp]' == toString.call(o);\n}\n\nmodule.exports = exports = function (regexp) {\n  if (!isRegExp(regexp)) {\n    throw new TypeError('Not a RegExp');\n  }\n\n  var flags = [];\n  if (regexp.global) flags.push('g');\n  if (regexp.multiline) flags.push('m');\n  if (regexp.ignoreCase) flags.push('i');\n  return new RegExp(regexp.source, flags.join(''));\n}\n\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/regexp-clone/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/regexp-clone/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/regexp-clone/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/regexp-clone/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/regexp-clone/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/regexp-clone/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/regexp-clone/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/regexp-clone/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/regexp-clone/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/regexp-clone/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/regexp-clone/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/regexp-clone/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/regexp-clone/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/regexp-clone/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/regexp-clone/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/regexp-clone/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/regexp-clone/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/regexp-clone/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/regexp-clone/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/regexp-clone/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/regexp-clone/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}}],"sources":{"../../node_modules/regexp-clone/index.js":"\nvar toString = Object.prototype.toString;\n\nfunction isRegExp (o) {\n  return 'object' == typeof o\n      && '[object RegExp]' == toString.call(o);\n}\n\nmodule.exports = exports = function (regexp) {\n  if (!isRegExp(regexp)) {\n    throw new TypeError('Not a RegExp');\n  }\n\n  var flags = [];\n  if (regexp.global) flags.push('g');\n  if (regexp.multiline) flags.push('m');\n  if (regexp.ignoreCase) flags.push('i');\n  return new RegExp(regexp.source, flags.join(''));\n}\n\n"},"lineCount":21}},"error":null,"hash":"cac3d640ef1029fb5a98f0af7fe3af57","cacheData":{"env":{}}}