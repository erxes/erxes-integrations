{"id":"../../node_modules/bson/lib/bson/code.js","dependencies":[{"name":"/Users/orgil/Documents/repos/erxes-integrations/package.json","includedInParent":true,"mtime":1561440176171},{"name":"/Users/orgil/Documents/repos/erxes-integrations/node_modules/bson/package.json","includedInParent":true,"mtime":1559967271041}],"generated":{"js":"/**\n * A class representation of the BSON Code type.\n *\n * @class\n * @param {(string|function)} code a string or function.\n * @param {Object} [scope] an optional scope for the function.\n * @return {Code}\n */\nvar Code = function Code(code, scope) {\n  if (!(this instanceof Code)) return new Code(code, scope);\n  this._bsontype = 'Code';\n  this.code = code;\n  this.scope = scope;\n};\n/**\n * @ignore\n */\n\n\nCode.prototype.toJSON = function () {\n  return {\n    scope: this.scope,\n    code: this.code\n  };\n};\n\nmodule.exports = Code;\nmodule.exports.Code = Code;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":1,"column":0}},{"generated":{"line":9,"column":0},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":9,"column":0}},{"name":"Code","generated":{"line":9,"column":4},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":9,"column":4}},{"generated":{"line":9,"column":8},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":9,"column":8}},{"generated":{"line":9,"column":11},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":9,"column":11}},{"name":"Code","generated":{"line":9,"column":20},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":9,"column":20}},{"generated":{"line":9,"column":24},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":9,"column":11}},{"name":"code","generated":{"line":9,"column":25},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":9,"column":25}},{"generated":{"line":9,"column":29},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":9,"column":11}},{"name":"scope","generated":{"line":9,"column":31},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":9,"column":31}},{"generated":{"line":9,"column":36},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":9,"column":11}},{"generated":{"line":9,"column":38},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":9,"column":38}},{"generated":{"line":10,"column":0},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":10,"column":2}},{"generated":{"line":10,"column":6},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":10,"column":6}},{"generated":{"line":10,"column":8},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":10,"column":8}},{"name":"Code","generated":{"line":10,"column":24},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":10,"column":24}},{"generated":{"line":10,"column":28},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":10,"column":6}},{"generated":{"line":10,"column":29},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":10,"column":2}},{"generated":{"line":10,"column":31},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":10,"column":31}},{"generated":{"line":10,"column":38},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":10,"column":38}},{"name":"Code","generated":{"line":10,"column":42},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":10,"column":42}},{"generated":{"line":10,"column":46},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":10,"column":38}},{"name":"code","generated":{"line":10,"column":47},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":10,"column":47}},{"generated":{"line":10,"column":51},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":10,"column":38}},{"name":"scope","generated":{"line":10,"column":53},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":10,"column":53}},{"generated":{"line":10,"column":58},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":10,"column":38}},{"generated":{"line":10,"column":59},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":10,"column":31}},{"generated":{"line":11,"column":0},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":11,"column":2}},{"name":"_bsontype","generated":{"line":11,"column":7},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":11,"column":7}},{"generated":{"line":11,"column":16},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":11,"column":2}},{"generated":{"line":11,"column":19},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":11,"column":19}},{"generated":{"line":11,"column":25},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":11,"column":2}},{"generated":{"line":12,"column":0},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":12,"column":2}},{"name":"code","generated":{"line":12,"column":7},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":12,"column":7}},{"generated":{"line":12,"column":11},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":12,"column":2}},{"name":"code","generated":{"line":12,"column":14},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":12,"column":14}},{"generated":{"line":12,"column":18},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":12,"column":2}},{"generated":{"line":13,"column":0},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":13,"column":2}},{"name":"scope","generated":{"line":13,"column":7},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":13,"column":7}},{"generated":{"line":13,"column":12},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":13,"column":2}},{"name":"scope","generated":{"line":13,"column":15},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":13,"column":15}},{"generated":{"line":13,"column":20},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":13,"column":2}},{"generated":{"line":14,"column":0},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":14,"column":1}},{"generated":{"line":14,"column":1},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":9,"column":0}},{"generated":{"line":15,"column":0},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":16,"column":0}},{"name":"Code","generated":{"line":20,"column":0},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":19,"column":0}},{"generated":{"line":20,"column":4},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":19,"column":4}},{"name":"prototype","generated":{"line":20,"column":5},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":19,"column":5}},{"generated":{"line":20,"column":14},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":19,"column":0}},{"name":"toJSON","generated":{"line":20,"column":15},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":19,"column":15}},{"generated":{"line":20,"column":21},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":19,"column":0}},{"generated":{"line":20,"column":24},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":19,"column":24}},{"generated":{"line":20,"column":36},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":19,"column":35}},{"generated":{"line":21,"column":0},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":20,"column":2}},{"generated":{"line":21,"column":9},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":20,"column":9}},{"name":"scope","generated":{"line":22,"column":0},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":20,"column":11}},{"name":"scope","generated":{"line":22,"column":4},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":20,"column":11}},{"generated":{"line":22,"column":9},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":20,"column":16}},{"generated":{"line":22,"column":11},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":20,"column":18}},{"name":"scope","generated":{"line":22,"column":16},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":20,"column":23}},{"generated":{"line":22,"column":21},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":20,"column":9}},{"name":"code","generated":{"line":23,"column":0},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":20,"column":30}},{"name":"code","generated":{"line":23,"column":4},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":20,"column":30}},{"generated":{"line":23,"column":8},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":20,"column":34}},{"generated":{"line":23,"column":10},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":20,"column":36}},{"name":"code","generated":{"line":23,"column":15},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":20,"column":41}},{"generated":{"line":24,"column":0},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":20,"column":9}},{"generated":{"line":24,"column":3},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":20,"column":2}},{"generated":{"line":25,"column":0},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":21,"column":1}},{"generated":{"line":25,"column":1},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":19,"column":0}},{"name":"module","generated":{"line":27,"column":0},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":23,"column":0}},{"generated":{"line":27,"column":6},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":23,"column":6}},{"name":"exports","generated":{"line":27,"column":7},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":23,"column":7}},{"generated":{"line":27,"column":14},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":23,"column":0}},{"name":"Code","generated":{"line":27,"column":17},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":23,"column":17}},{"generated":{"line":27,"column":21},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":23,"column":0}},{"name":"module","generated":{"line":28,"column":0},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":24,"column":0}},{"generated":{"line":28,"column":6},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":24,"column":6}},{"name":"exports","generated":{"line":28,"column":7},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":24,"column":7}},{"generated":{"line":28,"column":14},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":24,"column":0}},{"name":"Code","generated":{"line":28,"column":15},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":24,"column":15}},{"generated":{"line":28,"column":19},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":24,"column":0}},{"name":"Code","generated":{"line":28,"column":22},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":24,"column":22}},{"generated":{"line":28,"column":26},"source":"../../node_modules/bson/lib/bson/code.js","original":{"line":24,"column":0}}],"sources":{"../../node_modules/bson/lib/bson/code.js":"/**\n * A class representation of the BSON Code type.\n *\n * @class\n * @param {(string|function)} code a string or function.\n * @param {Object} [scope] an optional scope for the function.\n * @return {Code}\n */\nvar Code = function Code(code, scope) {\n  if (!(this instanceof Code)) return new Code(code, scope);\n  this._bsontype = 'Code';\n  this.code = code;\n  this.scope = scope;\n};\n\n/**\n * @ignore\n */\nCode.prototype.toJSON = function() {\n  return { scope: this.scope, code: this.code };\n};\n\nmodule.exports = Code;\nmodule.exports.Code = Code;\n"},"lineCount":null}},"error":null,"hash":"2f155793929074d6802821724237497b","cacheData":{"env":{}}}