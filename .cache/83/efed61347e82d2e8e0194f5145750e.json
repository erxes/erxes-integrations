{"id":"../../node_modules/bson/lib/bson/int_32.js","dependencies":[{"name":"/Users/orgil/Documents/repos/erxes-integrations/package.json","includedInParent":true,"mtime":1561440176171},{"name":"/Users/orgil/Documents/repos/erxes-integrations/node_modules/bson/package.json","includedInParent":true,"mtime":1559967271041}],"generated":{"js":"/**\n * A class representation of a BSON Int32 type.\n *\n * @class\n * @param {number} value the number we want to represent as an int32.\n * @return {Int32}\n */\nvar Int32 = function (value) {\n  if (!(this instanceof Int32)) return new Int32(value);\n  this._bsontype = 'Int32';\n  this.value = value;\n};\n/**\n * Access the number value.\n *\n * @method\n * @return {number} returns the wrapped int32 number.\n */\n\n\nInt32.prototype.valueOf = function () {\n  return this.value;\n};\n/**\n * @ignore\n */\n\n\nInt32.prototype.toJSON = function () {\n  return this.value;\n};\n\nmodule.exports = Int32;\nmodule.exports.Int32 = Int32;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":8,"column":0}},{"name":"Int32","generated":{"line":8,"column":4},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":8,"column":4}},{"generated":{"line":8,"column":9},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":8,"column":9}},{"generated":{"line":8,"column":12},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":8,"column":12}},{"name":"value","generated":{"line":8,"column":22},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":8,"column":21}},{"generated":{"line":8,"column":27},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":8,"column":12}},{"generated":{"line":8,"column":29},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":8,"column":28}},{"generated":{"line":9,"column":0},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":9,"column":2}},{"generated":{"line":9,"column":6},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":9,"column":6}},{"generated":{"line":9,"column":8},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":9,"column":8}},{"name":"Int32","generated":{"line":9,"column":24},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":9,"column":24}},{"generated":{"line":9,"column":29},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":9,"column":6}},{"generated":{"line":9,"column":30},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":9,"column":2}},{"generated":{"line":9,"column":32},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":9,"column":32}},{"generated":{"line":9,"column":39},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":9,"column":39}},{"name":"Int32","generated":{"line":9,"column":43},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":9,"column":43}},{"generated":{"line":9,"column":48},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":9,"column":39}},{"name":"value","generated":{"line":9,"column":49},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":9,"column":49}},{"generated":{"line":9,"column":54},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":9,"column":39}},{"generated":{"line":9,"column":55},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":9,"column":32}},{"generated":{"line":10,"column":0},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":11,"column":2}},{"name":"_bsontype","generated":{"line":10,"column":7},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":11,"column":7}},{"generated":{"line":10,"column":16},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":11,"column":2}},{"generated":{"line":10,"column":19},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":11,"column":19}},{"generated":{"line":10,"column":26},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":11,"column":2}},{"generated":{"line":11,"column":0},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":12,"column":2}},{"name":"value","generated":{"line":11,"column":7},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":12,"column":7}},{"generated":{"line":11,"column":12},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":12,"column":2}},{"name":"value","generated":{"line":11,"column":15},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":12,"column":15}},{"generated":{"line":11,"column":20},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":12,"column":2}},{"generated":{"line":12,"column":0},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":13,"column":1}},{"generated":{"line":12,"column":1},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":8,"column":0}},{"generated":{"line":13,"column":0},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":15,"column":0}},{"name":"Int32","generated":{"line":21,"column":0},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":21,"column":0}},{"generated":{"line":21,"column":5},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":21,"column":5}},{"name":"prototype","generated":{"line":21,"column":6},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":21,"column":6}},{"generated":{"line":21,"column":15},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":21,"column":0}},{"name":"valueOf","generated":{"line":21,"column":16},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":21,"column":16}},{"generated":{"line":21,"column":23},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":21,"column":0}},{"generated":{"line":21,"column":26},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":21,"column":26}},{"generated":{"line":21,"column":38},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":21,"column":37}},{"generated":{"line":22,"column":0},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":22,"column":2}},{"generated":{"line":22,"column":9},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":22,"column":9}},{"name":"value","generated":{"line":22,"column":14},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":22,"column":14}},{"generated":{"line":22,"column":19},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":22,"column":2}},{"generated":{"line":23,"column":0},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":23,"column":1}},{"generated":{"line":23,"column":1},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":21,"column":0}},{"generated":{"line":24,"column":0},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":25,"column":0}},{"name":"Int32","generated":{"line":29,"column":0},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":28,"column":0}},{"generated":{"line":29,"column":5},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":28,"column":5}},{"name":"prototype","generated":{"line":29,"column":6},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":28,"column":6}},{"generated":{"line":29,"column":15},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":28,"column":0}},{"name":"toJSON","generated":{"line":29,"column":16},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":28,"column":16}},{"generated":{"line":29,"column":22},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":28,"column":0}},{"generated":{"line":29,"column":25},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":28,"column":25}},{"generated":{"line":29,"column":37},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":28,"column":36}},{"generated":{"line":30,"column":0},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":29,"column":2}},{"generated":{"line":30,"column":9},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":29,"column":9}},{"name":"value","generated":{"line":30,"column":14},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":29,"column":14}},{"generated":{"line":30,"column":19},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":29,"column":2}},{"generated":{"line":31,"column":0},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":30,"column":1}},{"generated":{"line":31,"column":1},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":28,"column":0}},{"name":"module","generated":{"line":33,"column":0},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":32,"column":0}},{"generated":{"line":33,"column":6},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":32,"column":6}},{"name":"exports","generated":{"line":33,"column":7},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":32,"column":7}},{"generated":{"line":33,"column":14},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":32,"column":0}},{"name":"Int32","generated":{"line":33,"column":17},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":32,"column":17}},{"generated":{"line":33,"column":22},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":32,"column":0}},{"name":"module","generated":{"line":34,"column":0},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":33,"column":0}},{"generated":{"line":34,"column":6},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":33,"column":6}},{"name":"exports","generated":{"line":34,"column":7},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":33,"column":7}},{"generated":{"line":34,"column":14},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":33,"column":0}},{"name":"Int32","generated":{"line":34,"column":15},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":33,"column":15}},{"generated":{"line":34,"column":20},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":33,"column":0}},{"name":"Int32","generated":{"line":34,"column":23},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":33,"column":23}},{"generated":{"line":34,"column":28},"source":"../../node_modules/bson/lib/bson/int_32.js","original":{"line":33,"column":0}}],"sources":{"../../node_modules/bson/lib/bson/int_32.js":"/**\n * A class representation of a BSON Int32 type.\n *\n * @class\n * @param {number} value the number we want to represent as an int32.\n * @return {Int32}\n */\nvar Int32 = function(value) {\n  if (!(this instanceof Int32)) return new Int32(value);\n\n  this._bsontype = 'Int32';\n  this.value = value;\n};\n\n/**\n * Access the number value.\n *\n * @method\n * @return {number} returns the wrapped int32 number.\n */\nInt32.prototype.valueOf = function() {\n  return this.value;\n};\n\n/**\n * @ignore\n */\nInt32.prototype.toJSON = function() {\n  return this.value;\n};\n\nmodule.exports = Int32;\nmodule.exports.Int32 = Int32;\n"},"lineCount":null}},"error":null,"hash":"663b3aef69a79c5d19391fd4a89a2f1e","cacheData":{"env":{}}}