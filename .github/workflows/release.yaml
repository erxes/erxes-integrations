name: Publish Release

on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-18.04

    services:
      mongodb:
        image: mongo:3.6
        ports:
          - 27017:27017

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js 12.18.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.18.x

    - name: Get release version
      id: get_release_version
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

    # https://github.com/actions/cache/blob/master/examples.md#node---yarn
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Integrations - Install dependencies
      run: |
        yarn install

    - name: Integrations - Lint
      run: |
        yarn lint

    - name: Integrations - Test
      run: |
        yarn test
      env:
        TEST_MONGO_URL: mongodb://localhost/test
        GOOGLE_CLIENT_ID: GOOGLE_CLIENT_ID
        GOOGLE_CLIENT_SECRET: GOOGLE_CLIENT_SECRET
        ENCRYPTION_KEY: aksljdklwjdaklsjdkwljaslkdjwkljd
        DOMAIN: http://localhost:3400
        MAIN_APP_DOMAIN: http://localhost:3400

    - name: Integrations - Build
      run: |
        rm -rf node_modules
        yarn install --production
        yarn build

    - name: Integrations - Build docker image
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
        docker build -t erxes/erxes-integrations:${GITHUB_REF#refs/tags/} -f Dockerfile .
        docker push erxes/erxes-integrations:${GITHUB_REF#refs/tags/}

    - name: Prepare release assets
      run: |
        mkdir -p erxes-integrations
        mv dist node_modules package.json erxes-integrations
        tar -zcf erxes-integrations-${GITHUB_REF#refs/tags/}.tar.gz erxes-integrations

    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      with:
          files: |
            erxes-integrations-${{ steps.get_release_version.outputs.VERSION }}.tar.gz
          name: Release ${{ steps.get_release_version.outputs.VERSION }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
